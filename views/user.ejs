<div class="d-flex flex-column w-100">
  <div class="d-flex justify-content-between align-items-center mt-2">
    <h4 class="mb-1"><%= title %></h4>
    <button class="btn btn-success" onclick="showAddModal()"><i class="bi bi-plus"></i> Tambah <%= title %></button>
  </div>
</div>
<div class="mt-4">
  <!-- Tabel -->
  <table class="table table-hover rounded-3 overflow-hidden">
    <thead>
      <tr>
        <th scope="col" class="text-center" style="width: 50px">No.</th>
        <th scope="col">Username</th>
        <th scope="col" class="text-center" style="width: 200px">Role</th>
        <th scope="col" class="text-center" style="width: 200px">Aksi</th>
      </tr>
    </thead>
    <tbody id="list"></tbody>
  </table>
  <!-- End Tabel -->

  <!-- Modal untuk menambah user -->
  <div class="modal fade" id="modalTambah" tabindex="-1" aria-labelledby="modalTambahLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editTaskModalLabel">Tambah User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="input-group mb-4">
            <span class="input-group-text fw-semibold" style="width: 120px">Username</span>
            <input type="text" id="username" class="form-control" required />
          </div>
          <div class="input-group mb-4">
            <span class="input-group-text fw-semibold" style="width: 120px">Password</span>
            <input type="text" id="password" class="form-control" required />
          </div>
          <div class="input-group mb-4">
            <span class="input-group-text fw-semibold" style="width: 120px">Role</span>
            <select class="form-select" id="role">
              <option value="Staff">Staff</option>
              <option value="Admin">Admin</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="button" class="btn btn-success" onclick="tambah()">Tambah</button>
        </div>
      </div>
    </div>
  </div>
  <!-- End Modal -->

  <!-- Modal untuk edit user -->
  <div class="modal fade" id="modalEdit" tabindex="-1" aria-labelledby="modalTambahLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editTaskModalLabel">Edit User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="input-group mb-4">
            <span class="input-group-text fw-semibold" style="width: 120px">Username</span>
            <input type="text" id="editUsername" class="form-control" required disabled />
          </div>
          <div class="input-group mb-4">
            <span class="input-group-text fw-semibold" style="width: 120px">Role</span>
            <select class="form-select" id="editRole">
              <option value="Staff">Staff</option>
              <option value="Admin">Admin</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="button" class="btn btn-warning" onclick="edit()">Edit</button>
        </div>
      </div>
    </div>
  </div>
  <!-- End Modal -->

  <!-- Modal untuk hapus  -->
  <div class="modal fade" id="modalHapus" tabindex="-1" aria-labelledby="modalHapusLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editTaskModalLabel">Hapus User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">Apakah Anda yakin ingin menghapus user ini?</div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="button" class="btn btn-danger" onclick="hapus()">Hapus</button>
        </div>
      </div>
    </div>
  </div>
  <!-- End Modal -->
</div>

<script>
  // Fungsi untuk menampilkan modal tambah tugas
  function showAddModal() {
    new bootstrap.Modal(document.getElementById("modalTambah")).show();
  }

  // Fungsi untuk menampilkan modal edit tugas
  async function showEditModal(id) {
    try {
      const response = await fetch(`/api/auth/${id}`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.ok) {
        const data = await response.json();

        // Mengisi field dengan data dari API
        document.getElementById("editUsername").value = data.username;
        document.getElementById("editRole").value = data.role;

        // Menyimpan ID yang sedang diedit
        currentId = id;

        // Menampilkan modal
        new bootstrap.Modal(document.getElementById("modalEdit")).show();
      } else {
        console.error("Gagal mendapatkan data user");
      }
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  }

  // Fungsi untuk menampilkan modal hapus tugas
  function showDeleteModal(id) {
    currentId = id;
    new bootstrap.Modal(document.getElementById("modalHapus")).show();
  }

  // Tambah user
  async function tambah() {
    const username = document.getElementById("username").value;
    const password = document.getElementById("password").value;
    const role = document.getElementById("role").value;

    try {
      const response = await fetch("/api/auth/register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ username, password, role }),
      });

      if (response.ok) {
        const data = await response.json();
        document.getElementById("username").value = "";
        document.getElementById("password").value = "";
        document.getElementById("role").value = "Staff";
        const modalTambah = bootstrap.Modal.getInstance(document.getElementById("modalTambah"));
        modalTambah.hide();
        load();
      }
    } catch (error) {
      console.error(error);
    }
  }

  // Edit user
  async function edit() {
    const username = document.getElementById("editUsername").value;
    const role = document.getElementById("editRole").value;

    console.log("Current ID:", currentId); // Pastikan ID sudah terisi dengan benar

    try {
      const response = await fetch(`/api/auth/${currentId}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ username, role }),
      });

      if (response.ok) {
        const data = await response.json();
        const modalEdit = bootstrap.Modal.getInstance(document.getElementById("modalEdit"));
        modalEdit.hide();
        load();
      }
    } catch (error) {
      console.error(error);
    }
  }

  // Hapus user
  async function hapus() {
    try {
      const response = await fetch(`/api/auth/${currentId}`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.ok) {
        const data = await response.json();
        const modalHapus = bootstrap.Modal.getInstance(document.getElementById("modalHapus"));
        modalHapus.hide();
        load();
      }
    } catch (error) {
      console.error(error);
    }
  }

  async function load() {
    // const token = localStorage.getItem("token");
    try {
      const response = await fetch("/api/auth/user", {
        method: "GET",
      });

      const data = await response.json();
      const list = document.getElementById("list");

      // Jika tidak ada user
      if (!data || data.length === 0) {
        list.innerHTML = "<tr><td colspan='4' class='text-center'>Tidak ada user yang terdaftar...</td></tr>";
        return;
      }

      // Jika ada user
      list.innerHTML = data
        .map((users, index) => {
          return `
                <tr>
                    <td class="text-center">${index + 1}</td>
                    <td>${users.username}</td>
                    <td class="text-center">${users.role}</td>
                    <td class="text-center">
                        <button class="btn btn-warning btn-sm" onclick="showEditModal('${users._id}')">
                            <i class="bi bi-pencil"></i> Edit
                        </button>
                        <button class="btn btn-danger btn-sm" onclick="showDeleteModal('${users._id}')">
                            <i class="bi bi-trash"></i> Delete
                        </button>
                    </td>
                </tr>
            `;
        })
        .join("");
    } catch (error) {
      document.getElementById("list").innerHTML = `
            <tr><td colspan='4' class='text-center text-danger'>Gagal memuat... Coba lagi nanti.</td></tr>
        `;
    }
  }
  // Panggil fungsi load saat halaman selesai dimuat
  document.addEventListener("DOMContentLoaded", load);
</script>
